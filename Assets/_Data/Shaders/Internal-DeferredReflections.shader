Shader "Hidden/Internal-DeferredReflections" {
Properties {
 _SrcBlend ("", Float) = 1
 _DstBlend ("", Float) = 1
}
SubShader { 
 Pass {
  ZWrite Off
  Blend [_SrcBlend] [_DstBlend]
  GpuProgramID 34194
Program "vp" {
SubProgram "d3d9 " {
"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float _LightAsQuad;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 glstate_matrix_modelview0;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   glstate_matrix_mvp        c0       4
					//   glstate_matrix_modelview0 c4       3
					//   _ProjectionParams         c7       1
					//   _ScreenParams             c8       1
					//   _LightAsQuad              c9       1
					//
					
					    vs_3_0
					    def c10, 0.5, -1, 1, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1
					    dcl_texcoord1 o2.xyz
					    dp4 r0.y, c1, v0
					    mul r1.x, r0.y, c7.x
					    mul r1.w, r1.x, c10.x
					    dp4 r0.x, c0, v0
					    dp4 r0.w, c3, v0
					    mul r1.xz, r0.xyww, c10.x
					    mad o1.xy, r1.z, c8.zwzw, r1.xwzw
					    dp4 r1.x, c4, v0
					    dp4 r1.y, c5, v0
					    dp4 r1.z, c6, v0
					    mul r2.xyz, r1, c10.yyzw
					    mad r1.xyz, r1, -c10.yyzw, v1
					    mad o2.xyz, c9.x, r1, r2
					    dp4 r0.z, c2, v0
					    mov o0, r0
					    mov o1.zw, r0
					
					// approximately 16 instruction slots used"
}
SubProgram "d3d11 " {
"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o1.zw, r0.zzzw
					add o1.xy, r1.zzzz, r1.xwxx
					mul r0.xyz, v0.yyyy, cb2[5].xyzx
					mad r0.xyz, cb2[4].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[6].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[7].xyzx, v0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
					mad r0.xyz, -r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), v1.xyzx
					mad o2.xyz, cb0[6].xxxx, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
}
}
Program "fp" {
SubProgram "d3d9 " {
"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   sampler2D _CameraGBufferTexture0;
					//   sampler2D _CameraGBufferTexture1;
					//   sampler2D _CameraGBufferTexture2;
					//   row_major float4x4 _CameraToWorld;
					//   float4 _ProjectionParams;
					//   float3 _WorldSpaceCameraPos;
					//   float4 _ZBufferParams;
					//   float4 unity_ColorSpaceLuminance;
					//   samplerCUBE unity_SpecCube0;
					//   float4 unity_SpecCube0_BoxMax;
					//   float4 unity_SpecCube0_BoxMin;
					//   float4 unity_SpecCube0_HDR;
					//   float4 unity_SpecCube0_ProbePosition;
					//   float4 unity_SpecCube1_ProbePosition;
					//
					//
					// Registers:
					//
					//   Name                          Reg   Size
					//   ----------------------------- ----- ----
					//   _CameraToWorld                c0       3
					//   _WorldSpaceCameraPos          c3       1
					//   _ProjectionParams             c4       1
					//   _ZBufferParams                c5       1
					//   unity_SpecCube0_BoxMax        c6       1
					//   unity_SpecCube0_BoxMin        c7       1
					//   unity_SpecCube0_ProbePosition c8       1
					//   unity_SpecCube0_HDR           c9       1
					//   unity_SpecCube1_ProbePosition c10      1
					//   unity_ColorSpaceLuminance     c11      1
					//   unity_SpecCube0               s0       1
					//   _CameraDepthTexture           s1       1
					//   _CameraGBufferTexture0        s2       1
					//   _CameraGBufferTexture1        s3       1
					//   _CameraGBufferTexture2        s4       1
					//
					
					    ps_3_0
					    def c12, 1, 2, -1, 0
					    def c13, 0.699999988, 1.70000005, 6, 9.99999975e-006
					    def c14, 0.280000001, 1, 0, 0
					    dcl_texcoord v0.xyw
					    dcl_texcoord1 v1.xyz
					    dcl_cube s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    rcp r0.x, v1.z
					    mul r0.x, r0.x, c4.z
					    mul r0.xyz, r0.x, v1
					    rcp r0.w, v0.w
					    mul r1.xy, r0.w, v0
					    texld r2, r1, s1
					    mad r0.w, c5.x, r2.x, c5.y
					    rcp r0.w, r0.w
					    mul r0.xyz, r0.w, r0
					    mov r0.w, c12.x
					    dp4_pp r2.x, c0, r0
					    dp4_pp r2.y, c1, r0
					    dp4_pp r2.z, c2, r0
					    texld_pp r0, r1, s2
					    texld_pp r3, r1, s3
					    texld_pp r1, r1, s4
					    mad_pp r0.xyz, r1, c12.y, c12.z
					    nrm_pp r1.xyz, r0
					    add r0.xyz, r2, -c3
					    nrm_pp r4.xyz, r0
					    max_pp r0.x, r3.x, r3.y
					    max_pp r1.w, r0.x, r3.z
					    add_pp r0.x, -r1.w, c12.x
					    dp3 r0.y, r4, r1
					    add r0.y, r0.y, r0.y
					    mad_pp r5.xyz, r1, -r0.y, r4
					    mov r1.w, c12.w
					    if_lt -c8.w, r1.w
					      mov r1.w, c10.w
					      add r6.xyz, -r1.w, c7
					      add r7.xyz, r1.w, c6
					      nrm_pp r8.xyz, r5
					      add r7.xyz, -r2, r7
					      rcp r9.x, r8.x
					      rcp r9.y, r8.y
					      rcp r9.z, r8.z
					      mul_pp r7.xyz, r7, r9
					      add r6.xyz, -r2, r6
					      mul_pp r6.xyz, r9, r6
					      cmp_pp r6.xyz, -r8, r6, r7
					      min_pp r0.y, r6.y, r6.x
					      min_pp r1.w, r6.z, r0.y
					      add r6.xyz, r2, -c8
					      mad_pp r5.xyz, r8, r1.w, r6
					    endif
					    add_pp r0.y, -r3.w, c12.x
					    mad_pp r0.z, r0.y, -c13.x, c13.y
					    mul_pp r0.z, r0.z, r0.y
					    mul_pp r5.w, r0.z, c13.z
					    texldl_pp r5, r5, s0
					    pow_pp r0.z, r5.w, c9.y
					    mul_pp r0.z, r0.z, c9.x
					    mul_pp r5.xyz, r5, r0.z
					    mul_pp r5.xyz, r0.w, r5
					    dp3_pp r0.z, r1, -r4
					    add r0.w, -r0.z, c13.w
					    mad_pp r6.xyz, -r4, r0.w, r1
					    cmp_pp r1.xyz, r0.z, r1, r6
					    dp3_pp r0.z, r1, -r4
					    mul_pp r0.w, r0.y, r0.y
					    abs r1.x, c11.w
					    mul_pp r0.y, r0.w, r0.y
					    mad_pp r0.y, r0.y, -c14.x, c14.y
					    mad_pp r0.w, r0.w, r0.w, c12.x
					    rcp_pp r0.w, r0.w
					    cmp_pp r0.y, -r1.x, r0.y, r0.w
					    add_pp r0.x, -r0.x, c12.x
					    add_sat_pp r0.x, r0.x, r3.w
					    mul_pp r1.xyz, r5, r0.y
					    add_pp r0.y, -r0.z, c12.x
					    cmp_pp r0.y, r0.z, r0.y, c12.x
					    mul_pp r0.z, r0.y, r0.y
					    mul_pp r0.z, r0.z, r0.z
					    mul_pp r0.y, r0.y, r0.z
					    lrp_pp r4.xyz, r0.y, r0.x, r3
					    mul_pp oC0.xyz, r1, r4
					    add_pp r0.xyz, r2, -c6
					    add_pp r1.xyz, -r2, c7
					    max_pp r2.xyz, r0, r1
					    max_pp r0.xyz, r2, c12.w
					    dp3_pp r0.x, r0, r0
					    rsq_pp r0.x, r0.x
					    rcp r0.x, r0.x
					    rcp r0.y, c10.w
					    mad_sat_pp oC0.w, r0.x, -r0.y, c12.x
					
					// approximately 96 instruction slots used (6 texture, 90 arithmetic)"
}
SubProgram "d3d11 " {
"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy w
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xyw
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					div r0.x, cb1[5].z, v2.z
					mul r0.xyz, r0.xxxx, v2.xyzx
					div r1.xy, v1.xyxx, v1.wwww
					sample r2.xyzw, r1.xyxx, t0.xyzw, s1
					mad r0.w, cb1[7].x, r2.x, cb1[7].y
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r0.yyyy, cb3[1].xyzx
					mad r0.xyw, cb3[0].xyxz, r0.xxxx, r2.xyxz
					mad r0.xyz, cb3[2].xyzx, r0.zzzz, r0.xywx
					add r0.xyz, r0.xyzx, cb3[3].xyzx
					sample r2.xyzw, r1.xyxx, t1.xyzw, s2
					sample r3.xyzw, r1.xyxx, t2.xyzw, s3
					sample r1.xyzw, r1.xyxx, t3.xyzw, s4
					mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					add r2.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					max r0.w, r3.y, r3.x
					max r0.w, r3.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					dp3 r1.w, r2.xyzx, r1.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r1.xyzx, -r1.wwww, r2.xyzx
					lt r1.w, l(0.000000), cb2[2].w
					if_nz r1.w
					  add r5.xyz, cb2[1].xyzx, -cb2[6].wwww
					  add r6.xyz, cb2[0].xyzx, cb2[6].wwww
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r6.xyz, -r0.xyzx, r6.xyzx
					  div r6.xyz, r6.xyzx, r7.xyzx
					  add r5.xyz, -r0.xyzx, r5.xyzx
					  div r5.xyz, r5.xyzx, r7.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r5.xyz, r8.xyzx, r6.xyzx, r5.xyzx
					  min r1.w, r5.y, r5.x
					  min r1.w, r5.z, r1.w
					  add r5.xyz, r0.xyzx, -cb2[2].xyzx
					  mad r4.xyz, r7.xyzx, r1.wwww, r5.xyzx
					endif 
					add r1.w, -r3.w, l(1.000000)
					mad r4.w, -r1.w, l(0.700000), l(1.700000)
					mul r4.w, r1.w, r4.w
					mul r4.w, r4.w, l(6.000000)
					sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r4.w
					log r4.w, r4.w
					mul r4.w, r4.w, cb2[3].y
					exp r4.w, r4.w
					mul r4.w, r4.w, cb2[3].x
					mul r4.xyz, r4.xyzx, r4.wwww
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3 r2.w, r1.xyzx, -r2.xyzx
					lt r4.w, r2.w, l(0.000000)
					add r2.w, -r2.w, l(0.000010)
					mad r5.xyz, -r2.xyzx, r2.wwww, r1.xyzx
					movc r1.xyz, r4.wwww, r5.xyzx, r1.xyzx
					dp3 r1.x, r1.xyzx, -r2.xyzx
					max r1.x, r1.x, l(0.000000)
					mul r1.y, r1.w, r1.w
					eq r1.z, cb0[3].w, l(0.000000)
					mul r1.w, r1.y, r1.w
					mad r1.w, -r1.w, l(0.280000), l(1.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					movc r1.y, r1.z, r1.w, r1.y
					add r0.w, -r0.w, r3.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r1.yzw, r4.xxyz, r1.yyyy
					add r1.x, -r1.x, l(1.000000)
					mul r2.x, r1.x, r1.x
					mul r2.x, r2.x, r2.x
					mul r1.x, r1.x, r2.x
					add r2.xyz, -r3.xyzx, r0.wwww
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul o0.xyz, r1.yzwy, r2.xyzx
					add r1.xyz, r0.xyzx, -cb2[0].xyzx
					add r0.xyz, -r0.xyzx, cb2[1].xyzx
					max r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.x, r0.xyzx, r0.xyzx
					sqrt r0.x, r0.x
					div r0.x, r0.x, cb2[6].w
					add_sat o0.w, -r0.x, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
}
}
 }
 Pass {
  ZTest Always
  ZWrite Off
  Blend [_SrcBlend] [_DstBlend]
  GpuProgramID 127983
Program "vp" {
SubProgram "d3d9 " {
"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _ProjectionParams  c4       1
					//   _ScreenParams      c5       1
					//
					
					    vs_3_0
					    def c6, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord o0.xy
					    dcl_position o1
					    dp4 o1.z, c2, v0
					    dp4 r0.y, c1, v0
					    mul r0.z, r0.y, c4.x
					    dp4 r0.x, c0, v0
					    dp4 r0.w, c3, v0
					    mul r1.xzw, r0.xywz, c6.x
					    mov o1.xyw, r0
					    mad o0.xy, r1.z, c5.zwzw, r1.xwzw
					
					// approximately 8 instruction slots used"
}
SubProgram "d3d11 " {
"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_output o0.xy
					dcl_output_siv o1.xyzw, position
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.x, r0.y, cb0[5].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o1.xyzw, r0.xyzw
					add o0.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "d3d9 " {
Keywords { "UNITY_HDR_ON" }
					"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _ProjectionParams  c4       1
					//   _ScreenParams      c5       1
					//
					
					    vs_3_0
					    def c6, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord o0.xy
					    dcl_position o1
					    dp4 o1.z, c2, v0
					    dp4 r0.y, c1, v0
					    mul r0.z, r0.y, c4.x
					    dp4 r0.x, c0, v0
					    dp4 r0.w, c3, v0
					    mul r1.xzw, r0.xywz, c6.x
					    mov o1.xyw, r0
					    mad o0.xy, r1.z, c5.zwzw, r1.xwzw
					
					// approximately 8 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_output o0.xy
					dcl_output_siv o1.xyzw, position
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.x, r0.y, cb0[5].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o1.xyzw, r0.xyzw
					add o0.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
}
}
Program "fp" {
SubProgram "d3d9 " {
"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _CameraReflectionsTexture;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _CameraReflectionsTexture s0       1
					//
					
					    ps_3_0
					    def c0, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    exp_pp oC0.x, -r0.x
					    exp_pp oC0.y, -r0.y
					    exp_pp oC0.z, -r0.z
					    mov_pp oC0.w, c0.x
					
					// approximately 5 instruction slots used (1 texture, 4 arithmetic)"
}
SubProgram "d3d11 " {
"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v0.xyxx, t0.xyzw, s0
					exp o0.xyz, -r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "d3d9 " {
Keywords { "UNITY_HDR_ON" }
					"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _CameraReflectionsTexture;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _CameraReflectionsTexture s0       1
					//
					
					    ps_3_0
					    def c0, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    mov_pp oC0.xyz, r0
					    mov_pp oC0.w, c0.x
					
					// approximately 3 instruction slots used (1 texture, 2 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v0.xyxx, t0.xyzw, s0
					mov o0.xyz, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
}
}
 }
}
Fallback Off
}