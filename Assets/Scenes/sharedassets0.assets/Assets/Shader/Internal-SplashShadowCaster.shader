Shader "Hidden/InternalSplashShadowCaster" {
SubShader { 
 Pass {
  ZTest Always
  Cull Off
  Blend One One
  GpuProgramID 60892
Program "vp" {
SubProgram "opengl " {
"!!GLLegacy
					#version 120
					
					#ifdef VERTEX
					
					varying vec4 xlv_COLOR;
					void main ()
					{
					  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
					  xlv_COLOR = gl_Color;
					}
					
					
					#endif
					#ifdef FRAGMENT
					varying vec4 xlv_COLOR;
					void main ()
					{
					  gl_FragData[0] = xlv_COLOR;
					}
					
					
					#endif"
}
SubProgram "d3d9 " {
"!!DX9VertexSM20
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_color v1
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mov oD0, v1
					
					// approximately 5 instruction slots used"
}
SubProgram "d3d11 " {
"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 1
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mov o1.xyzw, v1.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "gles " {
"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					uniform highp mat4 glstate_matrix_mvp;
					varying lowp vec4 xlv_COLOR;
					void main ()
					{
					  gl_Position = (glstate_matrix_mvp * _glesVertex);
					  xlv_COLOR = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					varying lowp vec4 xlv_COLOR;
					void main ()
					{
					  gl_FragData[0] = xlv_COLOR;
					}
					
					
					#endif"
}
SubProgram "d3d11_9x " {
"!!DX10Level9Vertex
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					//
					// Constant buffer to DX9 shader constant mappings:
					//
					// Target Reg Buffer  Start Reg # of Regs        Data Conversion
					// ---------- ------- --------- --------- ----------------------
					// c1         cb0             0         4  ( FLT, FLT, FLT, FLT)
					//
					//
					// Runtime generated constant mappings:
					//
					// Target Reg                               Constant Description
					// ---------- --------------------------------------------------
					// c0                              Vertex Shader position offset
					//
					//
					// Level9 shader bytecode:
					//
					    vs_2_0
					    dcl_texcoord v0
					    dcl_texcoord1 v1
					    mul r0, v0.y, c2
					    mad r0, c1, v0.x, r0
					    mad r0, c3, v0.z, r0
					    mad r0, c4, v0.w, r0
					    mad oPos.xy, r0.w, c0, r0
					    mov oPos.zw, r0
					    mov oT0, v1
					
					// approximately 7 instruction slots used
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 1
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mov o1.xyzw, v1.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "gles3 " {
"!!GLES3
					#ifdef VERTEX
					#version 300 es
					precision highp float;
					precision highp int;
					uniform 	vec4 _Time;
					uniform 	vec4 _SinTime;
					uniform 	vec4 _CosTime;
					uniform 	vec4 unity_DeltaTime;
					uniform 	vec3 _WorldSpaceCameraPos;
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 _ScreenParams;
					uniform 	vec4 _ZBufferParams;
					uniform 	vec4 unity_OrthoParams;
					uniform 	vec4 unity_CameraWorldClipPlanes[6];
					uniform 	mat4 unity_CameraProjection;
					uniform 	mat4 unity_CameraInvProjection;
					uniform 	vec4 _WorldSpaceLightPos0;
					uniform 	vec4 _LightPositionRange;
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	mediump vec4 unity_4LightAtten0;
					uniform 	mediump vec4 unity_LightColor[8];
					uniform 	vec4 unity_LightPosition[8];
					uniform 	mediump vec4 unity_LightAtten[8];
					uniform 	vec4 unity_SpotDirection[8];
					uniform 	mediump vec4 unity_SHAr;
					uniform 	mediump vec4 unity_SHAg;
					uniform 	mediump vec4 unity_SHAb;
					uniform 	mediump vec4 unity_SHBr;
					uniform 	mediump vec4 unity_SHBg;
					uniform 	mediump vec4 unity_SHBb;
					uniform 	mediump vec4 unity_SHC;
					uniform 	mediump vec3 unity_LightColor0;
					uniform 	mediump vec3 unity_LightColor1;
					uniform 	mediump vec3 unity_LightColor2;
					uniform 	mediump vec3 unity_LightColor3;
					uniform 	vec4 unity_ShadowSplitSpheres[4];
					uniform 	vec4 unity_ShadowSplitSqRadii;
					uniform 	vec4 unity_LightShadowBias;
					uniform 	vec4 _LightSplitsNear;
					uniform 	vec4 _LightSplitsFar;
					uniform 	mat4 unity_World2Shadow[4];
					uniform 	mediump vec4 _LightShadowData;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	mat4 glstate_matrix_mvp;
					uniform 	mat4 glstate_matrix_modelview0;
					uniform 	mat4 glstate_matrix_invtrans_modelview0;
					uniform 	mat4 _Object2World;
					uniform 	mat4 _World2Object;
					uniform 	vec4 unity_LODFade;
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	mat4 glstate_matrix_transpose_modelview0;
					uniform 	mat4 glstate_matrix_projection;
					uniform 	lowp vec4 glstate_lightmodel_ambient;
					uniform 	mat4 unity_MatrixV;
					uniform 	mat4 unity_MatrixVP;
					uniform 	lowp vec4 unity_AmbientSky;
					uniform 	lowp vec4 unity_AmbientEquator;
					uniform 	lowp vec4 unity_AmbientGround;
					uniform 	lowp vec4 unity_FogColor;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 unity_DynamicLightmapST;
					uniform 	vec4 unity_SpecCube0_BoxMax;
					uniform 	vec4 unity_SpecCube0_BoxMin;
					uniform 	vec4 unity_SpecCube0_ProbePosition;
					uniform 	mediump vec4 unity_SpecCube0_HDR;
					uniform 	vec4 unity_SpecCube1_BoxMax;
					uniform 	vec4 unity_SpecCube1_BoxMin;
					uniform 	vec4 unity_SpecCube1_ProbePosition;
					uniform 	mediump vec4 unity_SpecCube1_HDR;
					in highp vec4 in_POSITION0;
					in lowp vec4 in_COLOR0;
					out lowp vec4 vs_COLOR0;
					highp vec4 t0;
					void main()
					{
					    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
					    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
					    vs_COLOR0 = in_COLOR0;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 300 es
					precision highp float;
					precision highp int;
					in lowp vec4 vs_COLOR0;
					layout(location = 0) out lowp vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vs_COLOR0;
					    return;
					}
					#endif"
}
SubProgram "glcore " {
"!!GLCore32
					#ifdef VERTEX
					#version 150
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_shader_bit_encoding : enable
					uniform 	vec4 _Time;
					uniform 	vec4 _SinTime;
					uniform 	vec4 _CosTime;
					uniform 	vec4 unity_DeltaTime;
					uniform 	vec3 _WorldSpaceCameraPos;
					uniform 	vec4 _ProjectionParams;
					uniform 	vec4 _ScreenParams;
					uniform 	vec4 _ZBufferParams;
					uniform 	vec4 unity_OrthoParams;
					uniform 	vec4 unity_CameraWorldClipPlanes[6];
					uniform 	mat4 unity_CameraProjection;
					uniform 	mat4 unity_CameraInvProjection;
					uniform 	vec4 _WorldSpaceLightPos0;
					uniform 	vec4 _LightPositionRange;
					uniform 	vec4 unity_4LightPosX0;
					uniform 	vec4 unity_4LightPosY0;
					uniform 	vec4 unity_4LightPosZ0;
					uniform 	vec4 unity_4LightAtten0;
					uniform 	vec4 unity_LightColor[8];
					uniform 	vec4 unity_LightPosition[8];
					uniform 	vec4 unity_LightAtten[8];
					uniform 	vec4 unity_SpotDirection[8];
					uniform 	vec4 unity_SHAr;
					uniform 	vec4 unity_SHAg;
					uniform 	vec4 unity_SHAb;
					uniform 	vec4 unity_SHBr;
					uniform 	vec4 unity_SHBg;
					uniform 	vec4 unity_SHBb;
					uniform 	vec4 unity_SHC;
					uniform 	vec3 unity_LightColor0;
					uniform 	vec3 unity_LightColor1;
					uniform 	vec3 unity_LightColor2;
					uniform 	vec3 unity_LightColor3;
					uniform 	vec4 unity_ShadowSplitSpheres[4];
					uniform 	vec4 unity_ShadowSplitSqRadii;
					uniform 	vec4 unity_LightShadowBias;
					uniform 	vec4 _LightSplitsNear;
					uniform 	vec4 _LightSplitsFar;
					uniform 	mat4 unity_World2Shadow[4];
					uniform 	vec4 _LightShadowData;
					uniform 	vec4 unity_ShadowFadeCenterAndType;
					uniform 	mat4 glstate_matrix_mvp;
					uniform 	mat4 glstate_matrix_modelview0;
					uniform 	mat4 glstate_matrix_invtrans_modelview0;
					uniform 	mat4 _Object2World;
					uniform 	mat4 _World2Object;
					uniform 	vec4 unity_LODFade;
					uniform 	vec4 unity_WorldTransformParams;
					uniform 	mat4 glstate_matrix_transpose_modelview0;
					uniform 	mat4 glstate_matrix_projection;
					uniform 	vec4 glstate_lightmodel_ambient;
					uniform 	mat4 unity_MatrixV;
					uniform 	mat4 unity_MatrixVP;
					uniform 	vec4 unity_AmbientSky;
					uniform 	vec4 unity_AmbientEquator;
					uniform 	vec4 unity_AmbientGround;
					uniform 	vec4 unity_FogColor;
					uniform 	vec4 unity_FogParams;
					uniform 	vec4 unity_LightmapST;
					uniform 	vec4 unity_DynamicLightmapST;
					uniform 	vec4 unity_SpecCube0_BoxMax;
					uniform 	vec4 unity_SpecCube0_BoxMin;
					uniform 	vec4 unity_SpecCube0_ProbePosition;
					uniform 	vec4 unity_SpecCube0_HDR;
					uniform 	vec4 unity_SpecCube1_BoxMax;
					uniform 	vec4 unity_SpecCube1_BoxMin;
					uniform 	vec4 unity_SpecCube1_ProbePosition;
					uniform 	vec4 unity_SpecCube1_HDR;
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					out vec4 vs_COLOR0;
					vec4 t0;
					void main()
					{
					    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
					    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
					    vs_COLOR0 = in_COLOR0;
					    return;
					}
					#endif
					#ifdef FRAGMENT
					#version 150
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_shader_bit_encoding : enable
					in  vec4 vs_COLOR0;
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vs_COLOR0;
					    return;
					}
					#endif"
}
}
Program "fp" {
SubProgram "opengl " {
"!!GLLegacy"
}
SubProgram "d3d9 " {
"!!DX9PixelSM20
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					    ps_2_0
					    dcl v0
					    mov_pp oC0, v0
					
					// approximately 1 instruction slot used"
}
SubProgram "d3d11 " {
"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					mov o0.xyzw, v1.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "gles " {
"!!GLES"
}
SubProgram "d3d11_9x " {
"!!DX10Level9Pixel
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					//
					// Level9 shader bytecode:
					//
					    ps_2_0
					    dcl_pp t0
					    mov_pp oC0, t0
					
					// approximately 1 instruction slot used
					ps_4_0
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					mov o0.xyzw, v1.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "gles3 " {
"!!GLES3"
}
SubProgram "glcore " {
"!!GLCore32"
}
}
 }
}
Fallback Off
}