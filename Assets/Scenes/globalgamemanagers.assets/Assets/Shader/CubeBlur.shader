Shader "Hidden/CubeBlur" {
Properties {
 _MainTex ("Main", CUBE) = "" { }
 _Texel ("Texel", Float) = 0.0078125
 _Level ("Level", Float) = 0
 _Scale ("Scale", Float) = 1
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }
 Pass {
  Tags { "RenderType"="Opaque" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 13554
Program "vp" {
SubProgram "d3d9 " {
"!!DX9VertexSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1
					    dp4 o0.x, c0, v0
					    dp4 o0.y, c1, v0
					    dp4 o0.z, c2, v0
					    dp4 o0.w, c3, v0
					    mov o1, v1
					
					// approximately 5 instruction slots used"
}
SubProgram "d3d11 " {
"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 1
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mov o1.xyzw, v2.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
}
Program "fp" {
SubProgram "d3d9 " {
"!!DX9PixelSM30
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float _Level;
					//   samplerCUBE _MainTex;
					//   float _Scale;
					//   float _Texel;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Texel       c0       1
					//   _Level       c1       1
					//   _Scale       c2       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c3, 1, 0, 3, 5
					    def c4, -1, 0, 1, 1.44269502
					    def c5, 1.5, 2.5, 0.5, 2
					    dcl_texcoord_pp v0.xyz
					    dcl_cube s0
					    mov r0, c3
					    mad_pp r0.xyz, c2.x, r0.xyyw, r0.yzww
					    add r1.xyz, c4.x, v0_abs
					    cmp_pp r1.xyz, -r1_abs, v0, c4.y
					    add_pp r2.xyz, -r1_abs, c4.z
					    mul_pp r2.xyz, r2, v0
					    dp3_pp r0.w, r2, r2
					    add_pp r0.w, r0.w, c4.z
					    rsq_pp r0.w, r0.w
					    mul_pp r1.w, r0.w, r0.w
					    mul_pp r2.x, r0.w, r1.w
					    mul_pp r2.yz, r2.x, c2.x
					    mul_pp r0.xyz, r0, r2
					    mul_pp r0.xyz, r0, -r0
					    mul_pp r0.xyz, r0, c4.w
					    exp_pp r2.x, r0.x
					    exp_pp r2.y, r0.y
					    exp_pp r2.z, r0.z
					    mul_pp r0.xyz, r2.z, r2
					    mov_pp r3.w, c1.x
					    mul_pp r4.xyz, r1.zxyw, c0.x
					    mad_pp r5.xyz, r4, -c5.x, v0
					    mad_pp r6.xyz, r4.zxyw, -c5.y, r5
					    max_pp r7.xyz, r6, c4.x
					    min_pp r8.xyz, r7, c4.z
					    add_pp r6.xyz, r6, -r8
					    max_pp r0.w, r6_abs.x, r6_abs.y
					    max_pp r1.w, r0.w, r6_abs.z
					    mad_pp r3.xyz, r1.w, -r1, r8
					    texldl_pp r3, r3, s0
					    max_pp r6, r3, c4.y
					    mov_pp r3.w, c1.x
					    mad_pp r7.xyz, r4, c5.x, v0
					    mad_pp r8.xyz, r4.zxyw, -c5.y, r7
					    max_pp r9.xyz, r8, c4.x
					    min_pp r10.xyz, r9, c4.z
					    add_pp r8.xyz, r8, -r10
					    max_pp r0.w, r8_abs.x, r8_abs.y
					    max_pp r1.w, r0.w, r8_abs.z
					    mad_pp r3.xyz, r1.w, -r1, r10
					    texldl r3, r3, s0
					    max r8, r3, c4.y
					    add_pp r3, r6, r8
					    mul_pp r3, r0.y, r3
					    mov_pp r6.w, c1.x
					    mad_pp r8.xyz, r4.zxyw, -c5.y, v0
					    max_pp r9.xyz, r8, c4.x
					    min_pp r10.xyz, r9, c4.z
					    add_pp r8.xyz, r8, -r10
					    max_pp r0.w, r8_abs.x, r8_abs.y
					    max_pp r1.w, r0.w, r8_abs.z
					    mad_pp r8.xyz, r1.w, -r1, r10
					    mad_pp r6.xyz, r4, -c5.z, r8
					    mad_pp r8.xyz, r4, c5.z, r8
					    texldl_pp r6, r6, s0
					    max_pp r9, r6, c4.y
					    mov_pp r8.w, c1.x
					    texldl r6, r8, s0
					    max r8, r6, c4.y
					    add_pp r6, r8, r9
					    mad_pp r3, r0.x, r6, r3
					    mov_pp r6.w, c1.x
					    mad_pp r8.xyz, r4, -c5.y, v0
					    mad_pp r9.xyz, r4.zxyw, -c5.y, r8
					    max_pp r10.xyz, r9, c4.x
					    min_pp r11.xyz, r10, c4.z
					    add_pp r9.xyz, r9, -r11
					    max_pp r0.w, r9_abs.x, r9_abs.y
					    max_pp r1.w, r0.w, r9_abs.z
					    mad_pp r6.xyz, r1.w, -r1, r11
					    texldl_pp r6, r6, s0
					    max_pp r9, r6, c4.y
					    mov_pp r6.w, c1.x
					    mad_pp r10.xyz, r4, c5.y, v0
					    mad_pp r11.xyz, r4.zxyw, -c5.y, r10
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r0.w, r11_abs.x, r11_abs.y
					    max_pp r1.w, r0.w, r11_abs.z
					    mad_pp r6.xyz, r1.w, -r1, r13
					    texldl r6, r6, s0
					    max r11, r6, c4.y
					    add_pp r6, r9, r11
					    mad_pp r3, r0.z, r6, r3
					    mul_pp r6.xyz, r2.y, r2
					    mul_pp r2.xyz, r2.x, r2
					    mov_pp r9.w, c1.x
					    mad_pp r11.xyz, r4.zxyw, -c5.x, r10
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r0.w, r11_abs.x, r11_abs.y
					    max_pp r1.w, r0.w, r11_abs.z
					    mad_pp r9.xyz, r1.w, -r1, r13
					    texldl_pp r9, r9, s0
					    max_pp r11, r9, c4.y
					    mov_pp r9.w, c1.x
					    mad_pp r12.xyz, r4.zxyw, -c5.x, r8
					    max_pp r13.xyz, r12, c4.x
					    min_pp r14.xyz, r13, c4.z
					    add_pp r12.xyz, r12, -r14
					    max_pp r0.w, r12_abs.x, r12_abs.y
					    max_pp r1.w, r0.w, r12_abs.z
					    mad_pp r9.xyz, r1.w, -r1, r14
					    texldl r9, r9, s0
					    max r12, r9, c4.y
					    add_pp r9, r11, r12
					    mad_pp r3, r6.z, r9, r3
					    mov_pp r9.w, c1.x
					    mad_pp r11.xyz, r4.zxyw, -c5.x, r7
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r0.w, r11_abs.x, r11_abs.y
					    max_pp r1.w, r0.w, r11_abs.z
					    mad_pp r9.xyz, r1.w, -r1, r13
					    texldl_pp r9, r9, s0
					    max_pp r11, r9, c4.y
					    mov_pp r9.w, c1.x
					    mad_pp r12.xyz, r4.zxyw, -c5.x, r5
					    max_pp r13.xyz, r12, c4.x
					    min_pp r14.xyz, r13, c4.z
					    add_pp r12.xyz, r12, -r14
					    max_pp r0.w, r12_abs.x, r12_abs.y
					    max_pp r1.w, r0.w, r12_abs.z
					    mad_pp r9.xyz, r1.w, -r1, r14
					    texldl r9, r9, s0
					    max r12, r9, c4.y
					    add_pp r9, r11, r12
					    mul_pp r9, r6.y, r9
					    mov_pp r11.w, c1.x
					    mad_pp r12.xyz, r4.zxyw, -c5.x, v0
					    max_pp r13.xyz, r12, c4.x
					    min_pp r14.xyz, r13, c4.z
					    add_pp r12.xyz, r12, -r14
					    max_pp r0.w, r12_abs.x, r12_abs.y
					    max_pp r1.w, r0.w, r12_abs.z
					    mad_pp r12.xyz, r1.w, -r1, r14
					    mad_pp r11.xyz, r4, c5.z, r12
					    mad_pp r12.xyz, r4, -c5.z, r12
					    texldl_pp r11, r11, s0
					    max_pp r13, r11, c4.y
					    mov_pp r12.w, c1.x
					    texldl r11, r12, s0
					    max r12, r11, c4.y
					    add_pp r11, r12, r13
					    mad_pp r9, r6.x, r11, r9
					    add_pp r3, r3, r9
					    mov_pp r9.w, c1.x
					    max_pp r11.xyz, r8, c4.x
					    min_pp r12.xyz, r11, c4.z
					    add_pp r11.xyz, r8, -r12
					    max_pp r0.w, r11_abs.x, r11_abs.y
					    max_pp r1.w, r0.w, r11_abs.z
					    mad_pp r11.xyz, r1.w, -r1, r12
					    mad_pp r9.xyz, r4.zxyw, -c5.z, r11
					    mad_pp r11.xyz, r4.zxyw, c5.z, r11
					    texldl_pp r9, r9, s0
					    max_pp r12, r9, c4.y
					    mov_pp r9.w, c1.x
					    max_pp r13.xyz, r10, c4.x
					    min_pp r14.xyz, r13, c4.z
					    add_pp r13.xyz, r10, -r14
					    max_pp r0.w, r13_abs.x, r13_abs.y
					    max_pp r1.w, r0.w, r13_abs.z
					    mad_pp r13.xyz, r1.w, -r1, r14
					    mad_pp r9.xyz, r4.zxyw, -c5.z, r13
					    mad_pp r13.xyz, r4.zxyw, c5.z, r13
					    texldl r9, r9, s0
					    max r14, r9, c4.y
					    add_pp r9, r12, r14
					    mad_pp r3, r2.z, r9, r3
					    mov_pp r9.w, c1.x
					    max_pp r12.xyz, r5, c4.x
					    min_pp r14.xyz, r12, c4.z
					    add_pp r12.xyz, r5, -r14
					    max_pp r0.w, r12_abs.x, r12_abs.y
					    max_pp r1.w, r0.w, r12_abs.z
					    mad_pp r12.xyz, r1.w, -r1, r14
					    mad_pp r9.xyz, r4.zxyw, -c5.z, r12
					    mad_pp r12.xyz, r4.zxyw, c5.z, r12
					    texldl_pp r9, r9, s0
					    max_pp r14, r9, c4.y
					    mov_pp r9.w, c1.x
					    max_pp r15.xyz, r7, c4.x
					    min_pp r16.xyz, r15, c4.z
					    add_pp r15.xyz, r7, -r16
					    max_pp r0.w, r15_abs.x, r15_abs.y
					    max_pp r1.w, r0.w, r15_abs.z
					    mad_pp r15.xyz, r1.w, -r1, r16
					    mad_pp r9.xyz, r4.zxyw, -c5.z, r15
					    mad_pp r15.xyz, r4.zxyw, c5.z, r15
					    texldl r9, r9, s0
					    max r16, r9, c4.y
					    add_pp r9, r14, r16
					    mul_pp r9, r2.y, r9
					    mov_pp r14.w, c1.x
					    mad_pp r16.xyz, r4, -c5.z, v0
					    mad_pp r14.xyz, r4.zxyw, -c5.z, r16
					    mad_pp r16.xyz, r4.zxyw, c5.z, r16
					    texldl_pp r14, r14, s0
					    max_pp r17, r14, c4.y
					    mov_pp r14.w, c1.x
					    mad_pp r18.xyz, r4, c5.z, v0
					    mad_pp r14.xyz, r4.zxyw, -c5.z, r18
					    mad_pp r18.xyz, r4.zxyw, c5.z, r18
					    texldl r14, r14, s0
					    max r19, r14, c4.y
					    add_pp r14, r17, r19
					    mad_pp r9, r2.x, r14, r9
					    add_pp r3, r3, r9
					    mov_pp r13.w, c1.x
					    texldl_pp r9, r13, s0
					    max_pp r13, r9, c4.y
					    mov_pp r11.w, c1.x
					    texldl r9, r11, s0
					    max r11, r9, c4.y
					    add_pp r9, r11, r13
					    mad_pp r3, r2.z, r9, r3
					    mov_pp r15.w, c1.x
					    texldl_pp r9, r15, s0
					    max_pp r11, r9, c4.y
					    mov_pp r12.w, c1.x
					    texldl r9, r12, s0
					    max r12, r9, c4.y
					    add_pp r9, r11, r12
					    mul_pp r9, r2.y, r9
					    mov_pp r18.w, c1.x
					    texldl_pp r11, r18, s0
					    max_pp r12, r11, c4.y
					    mov_pp r16.w, c1.x
					    texldl r11, r16, s0
					    max r13, r11, c4.y
					    add_pp r11, r12, r13
					    mad_pp r9, r2.x, r11, r9
					    dp3_pp r0.w, r2, c5.w
					    add_pp r2, r3, r9
					    mov_pp r3.w, c1.x
					    mad_pp r9.xyz, r4.zxyw, c5.x, r8
					    mad_pp r8.xyz, r4.zxyw, c5.y, r8
					    max_pp r11.xyz, r9, c4.x
					    min_pp r12.xyz, r11, c4.z
					    add_pp r9.xyz, r9, -r12
					    max_pp r1.w, r9_abs.x, r9_abs.y
					    max_pp r4.w, r1.w, r9_abs.z
					    mad_pp r3.xyz, r4.w, -r1, r12
					    texldl_pp r3, r3, s0
					    max_pp r9, r3, c4.y
					    mov_pp r3.w, c1.x
					    mad_pp r11.xyz, r4.zxyw, c5.x, r10
					    mad_pp r10.xyz, r4.zxyw, c5.y, r10
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r1.w, r11_abs.x, r11_abs.y
					    max_pp r4.w, r1.w, r11_abs.z
					    mad_pp r3.xyz, r4.w, -r1, r13
					    texldl r3, r3, s0
					    max r11, r3, c4.y
					    add_pp r3, r9, r11
					    mad_pp r2, r6.z, r3, r2
					    mov_pp r3.w, c1.x
					    mad_pp r9.xyz, r4.zxyw, c5.x, r5
					    mad_pp r5.xyz, r4.zxyw, c5.y, r5
					    max_pp r11.xyz, r9, c4.x
					    min_pp r12.xyz, r11, c4.z
					    add_pp r9.xyz, r9, -r12
					    max_pp r1.w, r9_abs.x, r9_abs.y
					    max_pp r4.w, r1.w, r9_abs.z
					    mad_pp r3.xyz, r4.w, -r1, r12
					    texldl_pp r3, r3, s0
					    max_pp r9, r3, c4.y
					    mov_pp r3.w, c1.x
					    mad_pp r11.xyz, r4.zxyw, c5.x, r7
					    mad_pp r7.xyz, r4.zxyw, c5.y, r7
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r1.w, r11_abs.x, r11_abs.y
					    max_pp r4.w, r1.w, r11_abs.z
					    mad_pp r3.xyz, r4.w, -r1, r13
					    texldl r3, r3, s0
					    max r11, r3, c4.y
					    add_pp r3, r9, r11
					    mul_pp r3, r3, r6.y
					    mov_pp r9.w, c1.x
					    mad_pp r11.xyz, r4.zxyw, c5.x, v0
					    max_pp r12.xyz, r11, c4.x
					    min_pp r13.xyz, r12, c4.z
					    add_pp r11.xyz, r11, -r13
					    max_pp r1.w, r11_abs.x, r11_abs.y
					    max_pp r4.w, r1.w, r11_abs.z
					    mad_pp r11.xyz, r4.w, -r1, r13
					    mad_pp r9.xyz, r4, -c5.z, r11
					    mad_pp r11.xyz, r4, c5.z, r11
					    texldl_pp r9, r9, s0
					    max_pp r12, r9, c4.y
					    mov_pp r11.w, c1.x
					    texldl r9, r11, s0
					    max r11, r9, c4.y
					    add_pp r9, r11, r12
					    mad_pp r3, r6.x, r9, r3
					    dp3_pp r1.w, r6, c5.w
					    add_pp r2, r2, r3
					    max_pp r3.xyz, r10, c4.x
					    min_pp r6.xyz, r3, c4.z
					    add_pp r3.xyz, -r6, r10
					    max_pp r4.w, r3_abs.x, r3_abs.y
					    max_pp r5.w, r4.w, r3_abs.z
					    mad_pp r3.xyz, r5.w, -r1, r6
					    mov_pp r3.w, c1.x
					    texldl_pp r3, r3, s0
					    max_pp r6, r3, c4.y
					    max_pp r3.xyz, r8, c4.x
					    min_pp r9.xyz, r3, c4.z
					    add_pp r3.xyz, r8, -r9
					    max_pp r4.w, r3_abs.x, r3_abs.y
					    max_pp r5.w, r4.w, r3_abs.z
					    mad_pp r3.xyz, r5.w, -r1, r9
					    mov_pp r3.w, c1.x
					    texldl r3, r3, s0
					    max r8, r3, c4.y
					    add_pp r3, r6, r8
					    mad_pp r2, r0.z, r3, r2
					    mad_pp r3.xyz, r4.zxyw, c5.y, v0
					    max_pp r6.xyz, r3, c4.x
					    min_pp r8.xyz, r6, c4.z
					    add_pp r3.xyz, r3, -r8
					    max_pp r4.w, r3_abs.x, r3_abs.y
					    max_pp r5.w, r4.w, r3_abs.z
					    mad_pp r3.xyz, r5.w, -r1, r8
					    mad_pp r6.xyz, r4, c5.z, r3
					    mad_pp r3.xyz, r4, -c5.z, r3
					    mov_pp r6.w, c1.x
					    texldl_pp r4, r6, s0
					    max_pp r6, r4, c4.y
					    mov_pp r3.w, c1.x
					    texldl r3, r3, s0
					    max r4, r3, c4.y
					    add_pp r3, r4, r6
					    max_pp r4.xyz, r7, c4.x
					    min_pp r6.xyz, r4, c4.z
					    add_pp r4.xyz, -r6, r7
					    max_pp r5.w, r4_abs.x, r4_abs.y
					    max_pp r6.w, r5.w, r4_abs.z
					    mad_pp r4.xyz, r6.w, -r1, r6
					    mov_pp r4.w, c1.x
					    texldl_pp r4, r4, s0
					    max_pp r6, r4, c4.y
					    max_pp r4.xyz, r5, c4.x
					    min_pp r7.xyz, r4, c4.z
					    add_pp r4.xyz, r5, -r7
					    max_pp r5.x, r4_abs.x, r4_abs.y
					    max_pp r7.w, r5.x, r4_abs.z
					    mad_pp r4.xyz, r7.w, -r1, r7
					    mov_pp r4.w, c1.x
					    texldl r4, r4, s0
					    max r5, r4, c4.y
					    add_pp r4, r5, r6
					    mul_pp r4, r0.y, r4
					    mad_pp r3, r0.x, r3, r4
					    dp3_pp r0.x, r0, c5.w
					    add_pp r2, r2, r3
					    add_pp r0.y, r1.w, r0.x
					    mad_pp r0.y, r0.w, c5.w, r0.y
					    add_pp r0.y, r1.w, r0.y
					    add_pp r0.x, r0.x, r0.y
					    rcp r0.x, r0.x
					    mul_pp oC0, r0.x, r2
					
					// approximately 406 instruction slots used (72 texture, 334 arithmetic)"
}
SubProgram "d3d11 " {
"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 17
					mov r0.x, cb0[6].w
					mov r0.yz, l(0,3.000000,5.000000,0)
					eq r1.xyz, |v1.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					and r1.xyz, r1.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
					mul r1.xyz, r1.xyzx, v1.xyzx
					add r2.xyz, -|r1.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r2.xyz, r2.xyzx, v1.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					add r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.w, r0.w, r0.w
					mul r2.x, r0.w, r1.w
					mul r2.yz, r2.xxxx, cb0[6].wwww
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, -r0.xyzx
					mul r0.xyz, r0.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
					exp r0.xyz, r0.xyzx
					mul r2.xyz, r0.zzzz, r0.xyzx
					mul r3.xyz, r1.zxyz, cb0[6].xxxx
					mad r4.xyz, -r3.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), v1.xyzx
					mad r5.xyz, -r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r4.xyzx
					max r6.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r5.xyz, r5.xyzx, -r6.xyzx
					max r0.w, |r5.y|, |r5.x|
					max r0.w, |r5.z|, r0.w
					mad r5.xyz, -r0.wwww, r1.xyzx, r6.xyzx
					sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, cb0[6].z
					max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r6.xyz, r3.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), v1.xyzx
					mad r7.xyz, -r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r6.xyzx
					max r8.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r7.xyz, r7.xyzx, -r8.xyzx
					max r0.w, |r7.y|, |r7.x|
					max r0.w, |r7.z|, r0.w
					mad r7.xyz, -r0.wwww, r1.xyzx, r8.xyzx
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, cb0[6].z
					max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r5.xyzw, r5.xyzw, r7.xyzw
					mul r5.xyzw, r2.yyyy, r5.xyzw
					mad r7.xyz, -r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), v1.xyzx
					max r8.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r7.xyz, r7.xyzx, -r8.xyzx
					max r0.w, |r7.y|, |r7.x|
					max r0.w, |r7.z|, r0.w
					mad r7.xyz, -r0.wwww, r1.xyzx, r8.xyzx
					mad r8.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					mad r7.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, cb0[6].z
					max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r8.xyzw, r8.xyzx, t0.xyzw, s0, cb0[6].z
					max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.xyzw, r7.xyzw, r8.xyzw
					mad r5.xyzw, r2.xxxx, r7.xyzw, r5.xyzw
					mad r7.xyz, -r3.xyzx, l(2.500000, 2.500000, 2.500000, 0.000000), v1.xyzx
					mad r8.xyz, -r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r7.xyzx
					max r9.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r8.xyz, r8.xyzx, -r9.xyzx
					max r0.w, |r8.y|, |r8.x|
					max r0.w, |r8.z|, r0.w
					mad r8.xyz, -r0.wwww, r1.xyzx, r9.xyzx
					sample_l r8.xyzw, r8.xyzx, t0.xyzw, s0, cb0[6].z
					max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r9.xyz, r3.xyzx, l(2.500000, 2.500000, 2.500000, 0.000000), v1.xyzx
					mad r10.xyz, -r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r9.xyzx
					max r11.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r10.xyz, r10.xyzx, -r11.xyzx
					max r0.w, |r10.y|, |r10.x|
					max r0.w, |r10.z|, r0.w
					mad r10.xyz, -r0.wwww, r1.xyzx, r11.xyzx
					sample_l r10.xyzw, r10.xyzx, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.xyzw, r8.xyzw, r10.xyzw
					mad r5.xyzw, r2.zzzz, r8.xyzw, r5.xyzw
					mul r8.xyz, r0.yyyy, r0.xyzx
					mul r0.xyz, r0.xxxx, r0.xyzx
					mad r10.xyz, -r3.zxyz, l(1.500000, 1.500000, 1.500000, 0.000000), r9.xyzx
					max r11.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r10.xyz, r10.xyzx, -r11.xyzx
					max r0.w, |r10.y|, |r10.x|
					max r0.w, |r10.z|, r0.w
					mad r10.xyz, -r0.wwww, r1.xyzx, r11.xyzx
					sample_l r10.xyzw, r10.xyzx, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r11.xyz, -r3.zxyz, l(1.500000, 1.500000, 1.500000, 0.000000), r7.xyzx
					max r12.xyz, r11.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r11.xyz, r11.xyzx, -r12.xyzx
					max r0.w, |r11.y|, |r11.x|
					max r0.w, |r11.z|, r0.w
					mad r11.xyz, -r0.wwww, r1.xyzx, r12.xyzx
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r10.xyzw, r10.xyzw, r11.xyzw
					mad r5.xyzw, r8.zzzz, r10.xyzw, r5.xyzw
					mad r10.xyz, -r3.zxyz, l(1.500000, 1.500000, 1.500000, 0.000000), r6.xyzx
					max r11.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r10.xyz, r10.xyzx, -r11.xyzx
					max r0.w, |r10.y|, |r10.x|
					max r0.w, |r10.z|, r0.w
					mad r10.xyz, -r0.wwww, r1.xyzx, r11.xyzx
					sample_l r10.xyzw, r10.xyzx, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r11.xyz, -r3.zxyz, l(1.500000, 1.500000, 1.500000, 0.000000), r4.xyzx
					max r12.xyz, r11.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r11.xyz, r11.xyzx, -r12.xyzx
					max r0.w, |r11.y|, |r11.x|
					max r0.w, |r11.z|, r0.w
					mad r11.xyz, -r0.wwww, r1.xyzx, r12.xyzx
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r10.xyzw, r10.xyzw, r11.xyzw
					mul r10.xyzw, r8.yyyy, r10.xyzw
					mad r11.xyz, -r3.zxyz, l(1.500000, 1.500000, 1.500000, 0.000000), v1.xyzx
					max r12.xyz, r11.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r11.xyz, r11.xyzx, -r12.xyzx
					max r0.w, |r11.y|, |r11.x|
					max r0.w, |r11.z|, r0.w
					mad r11.xyz, -r0.wwww, r1.xyzx, r12.xyzx
					mad r12.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r11.xyzx
					mad r11.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r11.xyzx
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r12.xyzw, r12.xyzx, t0.xyzw, s0, cb0[6].z
					max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r11.xyzw, r11.xyzw, r12.xyzw
					mad r10.xyzw, r8.xxxx, r11.xyzw, r10.xyzw
					add r5.xyzw, r5.xyzw, r10.xyzw
					max r10.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r11.xyz, r7.xyzx, -r10.xyzx
					max r0.w, |r11.y|, |r11.x|
					max r0.w, |r11.z|, r0.w
					mad r10.xyz, -r0.wwww, r1.xyzx, r10.xyzx
					mad r11.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r10.xyzx
					mad r10.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r10.xyzx
					sample_l r10.xyzw, r10.xyzx, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					max r12.xyz, r9.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r13.xyz, r9.xyzx, -r12.xyzx
					max r0.w, |r13.y|, |r13.x|
					max r0.w, |r13.z|, r0.w
					mad r12.xyz, -r0.wwww, r1.xyzx, r12.xyzx
					mad r13.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r12.xyzx
					mad r12.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r12.xyzx
					sample_l r12.xyzw, r12.xyzx, t0.xyzw, s0, cb0[6].z
					max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r10.xyzw, r10.xyzw, r12.xyzw
					sample_l r12.xyzw, r13.xyzx, t0.xyzw, s0, cb0[6].z
					max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r11.xyzw, r11.xyzw, r12.xyzw
					mad r5.xyzw, r0.zzzz, r11.xyzw, r5.xyzw
					max r11.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r12.xyz, r4.xyzx, -r11.xyzx
					max r0.w, |r12.y|, |r12.x|
					max r0.w, |r12.z|, r0.w
					mad r11.xyz, -r0.wwww, r1.xyzx, r11.xyzx
					mad r12.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r11.xyzx
					mad r11.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r11.xyzx
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r12.xyzw, r12.xyzx, t0.xyzw, s0, cb0[6].z
					max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					max r13.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r13.xyz, r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r14.xyz, r6.xyzx, -r13.xyzx
					max r0.w, |r14.y|, |r14.x|
					max r0.w, |r14.z|, r0.w
					mad r13.xyz, -r0.wwww, r1.xyzx, r13.xyzx
					mad r14.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					mad r13.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					sample_l r13.xyzw, r13.xyzx, t0.xyzw, s0, cb0[6].z
					max r13.xyzw, r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r11.xyzw, r11.xyzw, r13.xyzw
					mul r11.xyzw, r0.yyyy, r11.xyzw
					sample_l r13.xyzw, r14.xyzx, t0.xyzw, s0, cb0[6].z
					max r13.xyzw, r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r12.xyzw, r12.xyzw, r13.xyzw
					mul r12.xyzw, r0.yyyy, r12.xyzw
					mad r13.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), v1.xyzx
					mad r14.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					mad r13.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r13.xyzx
					sample_l r13.xyzw, r13.xyzx, t0.xyzw, s0, cb0[6].z
					max r13.xyzw, r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r14.xyzw, r14.xyzx, t0.xyzw, s0, cb0[6].z
					max r14.xyzw, r14.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r15.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), v1.xyzx
					mad r16.xyz, -r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r15.xyzx
					mad r15.xyz, r3.zxyz, l(0.500000, 0.500000, 0.500000, 0.000000), r15.xyzx
					sample_l r15.xyzw, r15.xyzx, t0.xyzw, s0, cb0[6].z
					max r15.xyzw, r15.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r13.xyzw, r13.xyzw, r15.xyzw
					mad r11.xyzw, r0.xxxx, r13.xyzw, r11.xyzw
					sample_l r13.xyzw, r16.xyzx, t0.xyzw, s0, cb0[6].z
					max r13.xyzw, r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r13.xyzw, r13.xyzw, r14.xyzw
					mad r12.xyzw, r0.xxxx, r13.xyzw, r12.xyzw
					add r5.xyzw, r5.xyzw, r12.xyzw
					mad r5.xyzw, r0.zzzz, r10.xyzw, r5.xyzw
					dp3 r0.x, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
					add r5.xyzw, r11.xyzw, r5.xyzw
					mad r0.yzw, r3.zzxy, l(0.000000, 1.500000, 1.500000, 1.500000), r7.xxyz
					mad r7.xyz, r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r7.xyzx
					max r10.xyz, r0.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r0.yzw, r0.yyzw, -r10.xxyz
					max r0.y, |r0.z|, |r0.y|
					max r0.y, |r0.w|, r0.y
					mad r0.yzw, -r0.yyyy, r1.xxyz, r10.xxyz
					sample_l r10.xyzw, r0.yzwy, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.yzw, r3.zzxy, l(0.000000, 1.500000, 1.500000, 1.500000), r9.xxyz
					mad r9.xyz, r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r9.xyzx
					max r11.xyz, r0.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r0.yzw, r0.yyzw, -r11.xxyz
					max r0.y, |r0.z|, |r0.y|
					max r0.y, |r0.w|, r0.y
					mad r0.yzw, -r0.yyyy, r1.xxyz, r11.xxyz
					sample_l r11.xyzw, r0.yzwy, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r10.xyzw, r10.xyzw, r11.xyzw
					mad r5.xyzw, r8.zzzz, r10.xyzw, r5.xyzw
					mad r0.yzw, r3.zzxy, l(0.000000, 1.500000, 1.500000, 1.500000), r4.xxyz
					mad r4.xyz, r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r4.xyzx
					max r10.xyz, r0.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r0.yzw, r0.yyzw, -r10.xxyz
					max r0.y, |r0.z|, |r0.y|
					max r0.y, |r0.w|, r0.y
					mad r0.yzw, -r0.yyyy, r1.xxyz, r10.xxyz
					sample_l r10.xyzw, r0.yzwy, t0.xyzw, s0, cb0[6].z
					max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.yzw, r3.zzxy, l(0.000000, 1.500000, 1.500000, 1.500000), r6.xxyz
					mad r6.xyz, r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), r6.xyzx
					max r11.xyz, r0.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r0.yzw, r0.yyzw, -r11.xxyz
					max r0.y, |r0.z|, |r0.y|
					max r0.y, |r0.w|, r0.y
					mad r0.yzw, -r0.yyyy, r1.xxyz, r11.xxyz
					sample_l r11.xyzw, r0.yzwy, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r10.xyzw, r10.xyzw, r11.xyzw
					mul r10.xyzw, r8.yyyy, r10.xyzw
					mad r0.yzw, r3.zzxy, l(0.000000, 1.500000, 1.500000, 1.500000), v1.xxyz
					max r11.xyz, r0.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r0.yzw, r0.yyzw, -r11.xxyz
					max r0.y, |r0.z|, |r0.y|
					max r0.y, |r0.w|, r0.y
					mad r0.yzw, -r0.yyyy, r1.xxyz, r11.xxyz
					mad r11.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.yzwy
					mad r0.yzw, r3.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r0.yyzw
					sample_l r12.xyzw, r0.yzwy, t0.xyzw, s0, cb0[6].z
					max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r11.xyzw, r11.xyzx, t0.xyzw, s0, cb0[6].z
					max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r11.xyzw, r12.xyzw, r11.xyzw
					mad r10.xyzw, r8.xxxx, r11.xyzw, r10.xyzw
					dp3 r0.y, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
					add r5.xyzw, r5.xyzw, r10.xyzw
					max r8.xyz, r9.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r9.xyz, -r8.xyzx, r9.xyzx
					max r0.z, |r9.y|, |r9.x|
					max r0.z, |r9.z|, r0.z
					mad r8.xyz, -r0.zzzz, r1.xyzx, r8.xyzx
					sample_l r8.xyzw, r8.xyzx, t0.xyzw, s0, cb0[6].z
					max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					max r9.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r7.xyz, r7.xyzx, -r9.xyzx
					max r0.z, |r7.y|, |r7.x|
					max r0.z, |r7.z|, r0.z
					mad r7.xyz, -r0.zzzz, r1.xyzx, r9.xyzx
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, cb0[6].z
					max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.xyzw, r7.xyzw, r8.xyzw
					mad r5.xyzw, r2.zzzz, r7.xyzw, r5.xyzw
					mad r7.xyz, r3.zxyz, l(2.500000, 2.500000, 2.500000, 0.000000), v1.xyzx
					max r8.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r7.xyz, r7.xyzx, -r8.xyzx
					max r0.z, |r7.y|, |r7.x|
					max r0.z, |r7.z|, r0.z
					mad r7.xyz, -r0.zzzz, r1.xyzx, r8.xyzx
					mad r8.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					mad r3.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
					sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, cb0[6].z
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample_l r7.xyzw, r8.xyzx, t0.xyzw, s0, cb0[6].z
					max r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, r3.xyzw, r7.xyzw
					max r7.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r6.xyz, r6.xyzx, -r7.xyzx
					max r0.z, |r6.y|, |r6.x|
					max r0.z, |r6.z|, r0.z
					mad r6.xyz, -r0.zzzz, r1.xyzx, r7.xyzx
					sample_l r6.xyzw, r6.xyzx, t0.xyzw, s0, cb0[6].z
					max r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					max r7.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					min r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r4.xyz, r4.xyzx, -r7.xyzx
					max r0.z, |r4.y|, |r4.x|
					max r0.z, |r4.z|, r0.z
					mad r1.xyz, -r0.zzzz, r1.xyzx, r7.xyzx
					sample_l r1.xyzw, r1.xyzx, t0.xyzw, s0, cb0[6].z
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r1.xyzw, r1.xyzw, r6.xyzw
					mul r1.xyzw, r1.xyzw, r2.yyyy
					mad r1.xyzw, r2.xxxx, r3.xyzw, r1.xyzw
					dp3 r0.z, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
					add r1.xyzw, r1.xyzw, r5.xyzw
					add r0.w, r0.y, r0.z
					mad r0.x, r0.x, l(2.000000), r0.w
					add r0.x, r0.y, r0.x
					add r0.x, r0.z, r0.x
					div o0.xyzw, r1.xyzw, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
}
}
 }
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }
 Pass {
  Tags { "RenderType"="Opaque" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 85008
Program "vp" {
SubProgram "d3d9 " {
"!!DX9VertexSM20
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_texcoord v1
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mov oT0, v1
					
					// approximately 5 instruction slots used"
}
SubProgram "d3d11 " {
"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 1
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mov o1.xyzw, v2.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "d3d11_9x " {
"!!DX10Level9Vertex
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Constant buffer to DX9 shader constant mappings:
					//
					// Target Reg Buffer  Start Reg # of Regs        Data Conversion
					// ---------- ------- --------- --------- ----------------------
					// c1         cb0             0         4  ( FLT, FLT, FLT, FLT)
					//
					//
					// Runtime generated constant mappings:
					//
					// Target Reg                               Constant Description
					// ---------- --------------------------------------------------
					// c0                              Vertex Shader position offset
					//
					//
					// Level9 shader bytecode:
					//
					    vs_2_0
					    dcl_texcoord v0
					    dcl_texcoord2 v2
					    mul r0, v0.y, c2
					    mad r0, c1, v0.x, r0
					    mad r0, c3, v0.z, r0
					    mad r0, c4, v0.w, r0
					    mad oPos.xy, r0.w, c0, r0
					    mov oPos.zw, r0
					    mov oT0, v2
					
					// approximately 7 instruction slots used
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 1
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mov o1.xyzw, v2.xyzw
					ret 
					// Approximately 0 instruction slots used"
}
}
Program "fp" {
SubProgram "d3d9 " {
"!!DX9PixelSM20
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float _Level;
					//   samplerCUBE _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Level       c0       1
					//   _MainTex     s0       1
					//
					
					    ps_2_0
					    dcl_pp t0.xyz
					    dcl_cube s0
					    mov_pp r0.xyz, t0
					    mov_pp r0.w, c0.x
					    texldb_pp r0, r0, s0
					    mov_pp oC0, r0
					
					// approximately 4 instruction slots used (1 texture, 3 arithmetic)"
}
SubProgram "d3d11 " {
"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					sample_l o0.xyzw, v1.xyzx, t0.xyzw, s0, cb0[6].z
					ret 
					// Approximately 0 instruction slots used"
}
SubProgram "d3d11_9x " {
"!!DX10Level9Pixel
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					//
					// Constant buffer to DX9 shader constant mappings:
					//
					// Target Reg Buffer  Start Reg # of Regs        Data Conversion
					// ---------- ------- --------- --------- ----------------------
					// c0         cb0             6         1  ( FLT, FLT, FLT, FLT)
					//
					//
					// Sampler/Resource to DX9 shader sampler mappings:
					//
					// Target Sampler Source Sampler  Source Resource
					// -------------- --------------- ----------------
					// s0             s0              t0               
					//
					//
					// Level9 shader bytecode:
					//
					    ps_2_0
					    dcl_pp t0
					    dcl_cube s0
					    mov_pp r0.xyz, t0
					    mov_pp r0.w, c0.z
					    texldb_pp r0, r0, s0
					    mov_pp oC0, r0
					
					// approximately 4 instruction slots used (1 texture, 3 arithmetic)
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					sample_b o0.xyzw, v1.xyzx, t0.xyzw, s0, cb0[6].z
					ret 
					// Approximately 0 instruction slots used"
}
}
 }
}
}